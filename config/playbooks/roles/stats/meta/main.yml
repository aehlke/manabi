---

dependencies:
  - role: ansible-prometheus
    prometheus_components: [ "prometheus", "node_exported" ]
    become: yes

  - role: oauth2_proxy
    oauth2_proxy_app_name: prometheus
    oauth2_proxy_client_id: '{{ prometheus_secrets.github_client_id }}'
    oauth2_proxy_client_secret: '{{ prometheus_secrets.github_client_secret }}'
    oauth2_proxy_port: '{{ prometheus.oauth2_proxy_port }}'
    oauth2_proxy_upstream: 'http://localhost:{{ prometheus.port }}'
    oauth2_proxy_redirect_url: 'https://{{ prometheus.hostname }}/oauth2/callback'
    oauth2_proxy_cookie_domain: '{{ prometheus.hostname }}'

  - role: ansible-supervisor_task
    name: postgres_exporter
    command: 'docker run -e DATA_SOURCE_NAME="postgresql://{{ postgres_exporter_secrets.postgres_username }}:{{ postgres_exporter_secrets.postgres_password }}@{{ postgres_host }}:{{ postgres_port }}/?sslmode=disable" -p {{ postgres_exporter.port }}:{{ postgres_exporter.port }} wrouesnel/postgres_exporter'
    user: ubuntu
    numprocs: 1

  - role: ansible-supervisor_task
    name: carbon-cache
    command: "carbon-cache --config='{{ carbon.config_path }}' --pidfile /tmp/carbon-cache.pid --nodaemon start"
    user: '{{ carbon.user }}'
    numprocs: 1

  - role: ansible-supervisor_task
    name: graphite-api
    command: 'uwsgi --socket="{{ graphite_api.uwsgi_socket }}" --chmod-socket=666 -w graphite_api.app:app --processes=2 --ignore-sigpipe --die-on-term --enable-threads --max-requests=10000 --vacuum'
    process_name: uwsgi
    user: ubuntu
    tags: uwsgi
    numprocs: 1

  - role: ansible-supervisor_task
    name: grafana
    command: "grafana-server --config='{{ grafana.config_path }}' cfg:default.paths.data='{{ grafana.data_dir }}' cfg:default.paths.plugins='{{ grafana.plugins_dir }}'"
    user: '{{ grafana.user }}'
    directory: '{{ grafana.home_dir }}'
    numprocs: 1

  - role: oauth2_proxy
    oauth2_proxy_app_name: grafana
    oauth2_proxy_client_id: '{{ grafana_secrets.github_client_id }}'
    oauth2_proxy_client_secret: '{{ grafana_secrets.github_client_secret }}'
    oauth2_proxy_port: '{{ grafana.oauth2_proxy_port }}'
    oauth2_proxy_upstream: 'http://localhost:{{ grafana.port }}'
    oauth2_proxy_redirect_url: 'https://{{ grafana.hostname }}/oauth2/callback'
    oauth2_proxy_cookie_domain: '{{ grafana.hostname }}'
